#summary Guice IDE Plugin User's Guice

== Features ==

=== Find Bindings ===

The main feature of the plugin is the ability to search for guice bindings in your code.  Before you can search for bindings you must configure your module contexts (see below).  Once that is done, simply select text in a Java file and choose Find Bindings from the context menu.  The bindings for that Java element in your configured contexts will appear in the results view.

=== Module Context Configuration ===

To use the plugin you must configure module contexts for it to run.  A *module context* is essentially the information on how to create an injector, so it is a set of modules in your code.

There are three ways to configure module contexts for use with the plugin:

  * Use a single module.
  * Implement the GuiceIDEPluginContextDefinition interface in your code.
  * Create a custom context.

*The single module method*: The easiest way to configure a context is to specify a single module in your code to be the context.  This amounts to having the plugin run {{{ Guice.createInjector(new YourModule()); }}}.  The Module Context Configure Dialog (see below) will allow you to set up such a context.  The downside to this approach is that it only works if you have single modules that function independently.

*The GuiceIDEPluginContextDefinition method*: To create a context that involves more than one of your modules, the best method is to create a class in your code that implements the GuiceIDEPluginContextDefinition interface (available in the Downloads section in a standalone jar).  The class will return a collection of modules that will then be used by the plugin to create an injector.  *Classes implementing this interface will be automatically detected by the plugin and enabled by default.*  This means that this method will make for the best ease of use of the plugin and will allow you to synchronize contexts with other coders.

*The custom context method*: If you have created a class that returns a collection of modules as above but that does not implement the interface, you can specify that class (and method) in the configure dialog (see below) and have it create a context.  It is recommended to use the interface however.


== User Interface ==

=== The Context Menu ===

The main entry point to the plugin's functionality is the context (right click) menu.  The Guice submenu contains "Find Bindings", "Configure", "Run Modules Now" and "Run Modules Automatically".

*Find Bindings* will run your configured contexts and present the results.

*Configure* will bring up the configure dialog (see below).

*Run Modules Now* will (re)run your contexts.

*Run Modules Automatically* controls whether your contexts are automatically rerun in response to code changes.

=== The Results View ===

The results view displays results from Find Bindings queries.  The results are displayed in a per context fashion and are hyperlinked wherever possible.

=== The Configure Dialog ===

The Configure dialog allows you to specify what contexts to run.

To set up single module contexts, click the "Scan for New Contexts" link in the lower half of the dialog and then select which modules you want to run (clicking the link will temporarily close the dialog while your modules are detected).

The top half of the dialog displays your GuiceIDEPluginContextDefinition contexts (and allows you to disable/enable them); custom contexts can also be added here.

=== The Errors View ===

The errors view servers two purposes.  It reports during context runtime any problems with your code (though these are also reported in response to "Find Bindings").  It also reports any internal errors the plugin has.  During the alpha phase, please check this from time to time and report errors on this website.
